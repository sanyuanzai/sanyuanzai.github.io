{"version":3,"file":"static/js/868.733c0100.chunk.js","mappings":"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","sources":["components/pin.tsx","screens/project-list/list.tsx","screens/project-list/search-panel.tsx","screens/project-list/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Rate } from \"antd\";\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: Boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin = ({ checked, onCheckedChange, ...restprops }: PinProps) => {\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...restprops}\n    />\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Dropdown, MenuProps, Modal, Table, TableProps } from \"antd\";\nimport { NoPaddingButton } from \"components/lib\";\nimport { Pin } from \"components/pin\";\nimport dayjs from \"dayjs\";\nimport React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDeleteProject, useEditProject } from \"utils/project\";\nimport { ListType } from \"../../types/ListType\";\nimport { User } from \"../../types/User\";\nimport { useProjectModal, useProjectsQueryKey } from \"./util\";\ninterface propsListType extends TableProps<ListType> {\n  users: User[];\n}\nconst List = memo(({ users, ...props }: propsListType) => {\n  const { mutate } = useEditProject(useProjectsQueryKey());\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n  return (\n    <Container>\n      <Table\n        pagination={false}\n        columns={[\n          {\n            title: <Pin checked={true} disabled={true} />,\n            render(value, project) {\n              return (\n                <Pin\n                  checked={project.pin}\n                  onCheckedChange={pinProject(project.id)}\n                />\n              );\n            },\n          },\n          {\n            title: \"名称\",\n            sorter: (a, b) => a.name.localeCompare(b.name),\n            render(value, project) {\n              return <Link to={String(project.id)}>{project.name}</Link>;\n            },\n          },\n          {\n            title: \"部门\",\n            dataIndex: \"organization\",\n            sorter: (a, b) => a.name.localeCompare(b.name),\n          },\n          {\n            title: \"负责人\",\n            render(value, project) {\n              return (\n                <span>\n                  {users.find((user) => user.id === project.personId)?.name ||\n                    \"未知\"}\n                </span>\n              );\n            },\n          },\n          {\n            title: \"创建时间\",\n            render(value, project) {\n              return (\n                <span>\n                  {project.created\n                    ? dayjs(project.created).format(\"YYYY-MM-DD\")\n                    : \"无\"}\n                </span>\n              );\n            },\n          },\n          {\n            render(value, project) {\n              return <More project={project} />;\n            },\n          },\n        ]}\n        {...props}\n      ></Table>\n    </Container>\n  );\n});\nconst More = ({ project }: { project: ListType }) => {\n  const { startEdit } = useProjectModal();\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\n  const confirmDeleteProject = (id: number) => {\n    Modal.confirm({\n      title: \"确定删除项目吗?\",\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteProject({ id });\n      },\n    });\n  };\n  const items: MenuProps[\"items\"] = [\n    {\n      key: \"edit\",\n      label: (\n        <NoPaddingButton type=\"link\" onClick={() => startEdit(project.id)}>\n          编辑\n        </NoPaddingButton>\n      ),\n    },\n    {\n      key: \"delete\",\n      label: (\n        <NoPaddingButton\n          type=\"link\"\n          onClick={() => confirmDeleteProject(project.id)}\n        >\n          删除\n        </NoPaddingButton>\n      ),\n    },\n  ];\n  return (\n    <Dropdown menu={{ items }}>\n      <NoPaddingButton type=\"link\">...</NoPaddingButton>\n    </Dropdown>\n  );\n};\n\nconst Container = styled.div``;\n\nexport default List;\n","import { Form, Input } from \"antd\";\nimport UserSelect from \"components/user-select\";\nimport { ListType } from \"../../types/ListType\";\nimport { User } from \"../../types/User\";\nimport React from \"react\";\ninterface propsSearchPanelType {\n  param: Partial<Pick<ListType, \"name\" | \"personId\">>;\n  setParam: (param: propsSearchPanelType[\"param\"]) => void;\n  users: User[];\n}\nconst SearchPanel = ({ param, setParam, users }: propsSearchPanelType) => {\n  return (\n    <Form style={{ marginBottom: \"2em\" }} layout=\"inline\">\n      <Form.Item>\n        <Input\n          type=\"text\"\n          value={param.name}\n          placeholder=\"项目名\"\n          onChange={(event) =>\n            setParam({\n              ...param,\n              name: event.target.value,\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          defaultOptionName={\"负责人\"}\n          value={param.personId}\n          onChange={(value) => setParam({ ...param, personId: value })}\n        />\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SearchPanel;\n","import { useDebounce, useDocumentTitle } from \"utils\";\nimport React from \"react\";\nimport List from \"./list\";\nimport SearchPanel from \"./search-panel\";\nimport styled from \"@emotion/styled\";\nimport { useProject } from \"utils/project\";\nimport useUser from \"utils/user\";\nimport { useProjectModal, useProjectSearchParam } from \"./util\";\nimport { ErrorBox, NoPaddingButton, Row } from \"components/lib\";\nconst ProjectListScreen = () => {\n  useDocumentTitle(\"项目列表\", false);\n\n  const { open: openModal } = useProjectModal();\n  const [param, setParam] = useProjectSearchParam();\n  const { isLoading, data: list, error } = useProject(useDebounce(param, 500));\n  const { data: users } = useUser();\n  return (\n    <Container>\n      <Row bettween={true}>\n        <h1>项目列表</h1>\n        <NoPaddingButton type=\"link\" onClick={openModal}>\n          创建项目\n        </NoPaddingButton>\n      </Row>\n      <SearchPanel users={users || []} param={param} setParam={setParam} />\n      <ErrorBox error={error} />\n      <List users={users || []} dataSource={list || []} loading={isLoading} />\n    </Container>\n  );\n};\nProjectListScreen.whyDidYouRender = true;\nconst Container = styled.div`\n  padding: 3.2rem;\n  flex: 1;\n`;\nexport default ProjectListScreen;\n"],"names":["Pin","checked","onCheckedChange","restprops","count","value","onChange","num","List","memo","users","props","mutate","useEditProject","useProjectsQueryKey","Container","pagination","columns","title","disabled","render","project","pin","id","sorter","a","b","name","localeCompare","to","String","dataIndex","find","user","personId","created","dayjs","format","More","startEdit","useProjectModal","deleteProject","useDeleteProject","items","key","label","type","onClick","Modal","content","okText","onOk","menu","styled","param","setParam","style","marginBottom","layout","placeholder","event","target","defaultOptionName","ProjectListScreen","useDocumentTitle","openModal","open","useProjectSearchParam","useProject","useDebounce","isLoading","list","data","error","useUser","bettween","dataSource","loading","whyDidYouRender"],"sourceRoot":""}
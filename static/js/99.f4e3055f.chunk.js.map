{"version":3,"file":"static/js/99.f4e3055f.chunk.js","mappings":"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","sources":["screens/kanban/util.ts","screens/epic/utils.ts","screens/epic/create-epic.tsx","utils/epics.ts","screens/epic/index.tsx","router/project/index.js","screens/project/index.tsx","utils/task.ts"],"sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDebounce } from \"utils\";\nimport { useProjectDetail } from \"utils/project\";\nimport { useTaskDetail } from \"utils/task\";\nimport { useUrlQueryParam } from \"utils/url\";\n\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\nexport const useProjectInUrl = () => useProjectDetail(useProjectIdInUrl());\n\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\nexport const useKanbanQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\n\nexport const useTaskSearchParams = () => {\n  const projectId = useProjectIdInUrl();\n  const [param] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\n  const debouceName = useDebounce(param.name, 300);\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      tagId: Number(param.tagId) || undefined,\n      name: debouceName || undefined,\n    }),\n    [param, projectId, debouceName]\n  );\n};\nexport const useTaskQueryKey = () => [\"tasks\", useTaskSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTaskDetail(Number(editingTaskId));\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n  return { editingTask, editingTaskId, startEdit, close, isLoading };\n};\n","import { useProjectIdInUrl } from \"screens/kanban/util\";\n\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];\n","import React, { useEffect } from 'react'\r\nimport { Button, Drawer, Form, Input, Spin } from 'antd'\r\nimport { DrawerProps } from 'antd/es/drawer'\r\nimport styled from '@emotion/styled'\r\nimport { ErrorBox } from 'components/lib'\r\nimport { useAddEpic } from 'utils/epics'\r\nimport { useEpicsQueryKey } from 'screens/epic/utils'\r\nimport { useForm } from 'antd/es/form/Form'\r\nimport { useProjectIdInUrl } from 'screens/kanban/util'\r\n\r\nexport const CreateEpic = (\r\n  props: Pick<DrawerProps, 'visible'> & { onClose: () => void }\r\n) => {\r\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey())\r\n  const [form] = useForm()\r\n  const projectId = useProjectIdInUrl()\r\n\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({ ...values, projectId })\r\n    props.onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form, props.visible])\r\n\r\n  return (\r\n    <Drawer\r\n      open={props.visible}\r\n      onClose={props.onClose}\r\n      forceRender={true}\r\n      destroyOnClose={true}\r\n      width={'100%'}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={'large'} />\r\n        ) : (\r\n          <>\r\n            <h1>创建任务组</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={'vertical'}\r\n              style={{ width: '40rem' }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={'名称'}\r\n                name={'name'}\r\n                rules={[{ required: true, message: '请输入任务组名' }]}\r\n              >\r\n                <Input placeholder={'请输入任务组名称'} />\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: 'right' }}>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type={'primary'}\r\n                  htmlType={'submit'}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import { useHttp } from \"utils/http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { useAddConfig, useDeleteConfig } from \"utils/use-optimistic-optins\";\nimport { Epic } from \"types/epic\";\n\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp();\n\n  return useQuery<Epic[]>([\"epics\", param], () =>\n    client(\"epics\", { data: param })\n  );\n};\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Epic>) =>\n      client(`epics`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`epics/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","import React, { useState } from 'react'\nimport { Row, ScreenContainer } from 'components/lib'\nimport { useProjectInUrl } from 'screens/kanban/util'\nimport { useDeleteEpic, useEpics } from 'utils/epics'\nimport { Button, List, Modal } from 'antd'\nimport dayjs from 'dayjs'\nimport { useTasks } from 'utils/task'\nimport { Link } from 'react-router-dom'\nimport { useEpicSearchParams, useEpicsQueryKey } from 'screens/epic/utils'\nimport { Epic } from 'types/epic'\nimport { CreateEpic } from 'screens/epic/create-epic'\n\nexport const EpicScreen = () => {\n  const { data: currentProject } = useProjectInUrl()\n  const { data: epics } = useEpics(useEpicSearchParams())\n  const { data: tasks } = useTasks({ projectId: currentProject?.id })\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey())\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false)\n\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: `确定删除项目组：${epic.name}`,\n      content: '点击确定删除',\n      okText: '确定',\n      onOk() {\n        deleteEpic({ id: epic.id })\n      },\n    })\n  }\n\n  return (\n    <ScreenContainer>\n      <Row bettween={true}>\n        <h1>{currentProject?.name}任务组</h1>\n        <Button onClick={() => setEpicCreateOpen(true)} type={'link'}>\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        style={{ overflow: 'scroll' }}\n        dataSource={epics}\n        itemLayout={'vertical'}\n        renderItem={(epic) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <Row bettween={true}>\n                  <span>{epic.name}</span>\n                  <Button onClick={() => confirmDeleteEpic(epic)} type={'link'}>\n                    删除\n                  </Button>\n                </Row>\n              }\n              description={\n                <div>\n                  <div>开始时间：{dayjs(epic.start).format('YYYY-MM-DD')}</div>\n                  <div>结束时间：{dayjs(epic.end).format('YYYY-MM-DD')}</div>\n                </div>\n              }\n            />\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <Link\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\n                    key={task.id}\n                  >\n                    {task.name}\n                  </Link>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      />\n    </ScreenContainer>\n  )\n}\n","import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { EpicScreen } from 'screens/epic'\n\nconst KanbanScreen = React.lazy(() => import('screens/kanban'))\nconst routes = [\n  {\n    path: '',\n    element: <Navigate to={'kanban'} replace={true} />,\n  },\n  {\n    path: 'kanban',\n    element: <KanbanScreen />,\n  },\n  {\n    path: 'epic',\n    element: <EpicScreen />,\n  },\n]\nexport default routes\n","import styled from '@emotion/styled'\nimport { Menu } from 'antd'\nimport React, { memo } from 'react'\nimport { Link, useLocation, useRoutes } from 'react-router-dom'\nimport routes from 'router/project'\n\nconst ProjectScreen = memo(() => {\n  const useRouteType = () => {\n    const units = useLocation().pathname.split('/')\n    return units[units.length - 1]\n  }\n  return (\n    <Container>\n      <Aside>\n        <Menu mode='inline' selectedKeys={[useRouteType()]}>\n          <Menu.Item key={'kanban'}>\n            <Link to={'kanban'}>看板</Link>\n          </Menu.Item>\n          <Menu.Item key={'epic'}>\n            <Link to={'epic'}>任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>{useRoutes(routes)}</Main>\n    </Container>\n  )\n})\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n  width: 100%;\n`\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  display: flex;\n`\nconst Main = styled.div`\n  display: flex;\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n`\nexport default ProjectScreen\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { useHttp } from \"./http\";\nimport { SortProps } from \"./kanban\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  useReorderTaskConfig,\n} from \"./use-optimistic-optins\";\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    client(\"tasks\", { data: param })\n  );\n};\nexport const useTaskDetail = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Task>([\"tasks\", { id }], () => client(`tasks/${id}`), {\n    enabled: Boolean(id),\n  });\n};\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (param: Partial<Task>) => client(`tasks`, { method: \"POST\", data: param }),\n    useAddConfig(queryKey)\n  );\n};\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) => client(`tasks/${id}`, { method: \"DELETE\" }),\n    useDeleteConfig(queryKey)\n  );\n};\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (param: Partial<Task>) =>\n      client(`tasks/${param.id}`, { method: \"PATCH\", data: param }),\n    useEditConfig(queryKey)\n  );\n};\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n"],"names":["useProjectIdInUrl","id","useLocation","pathname","match","Number","useProjectInUrl","useProjectDetail","useKanbanSearchParams","projectId","useKanbanQueryKey","useTaskSearchParams","useUrlQueryParam","param","debouceName","useDebounce","name","useMemo","typeId","undefined","processorId","tagId","useTaskQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTaskDetail","editingTask","data","isLoading","startEdit","useCallback","close","useEpicSearchParams","useEpicsQueryKey","CreateEpic","props","queryKey","client","useHttp","useMutation","params","method","useAddConfig","useAddEpic","addEpic","mutate","error","useForm","form","onFinish","values","onClose","useEffect","resetFields","visible","open","forceRender","destroyOnClose","width","Container","size","layout","style","label","rules","required","message","placeholder","textAlign","loading","type","htmlType","styled","EpicScreen","currentProject","epics","useQuery","useEpics","tasks","useTasks","deleteEpic","useDeleteConfig","useDeleteEpic","useState","epicCreateOpen","setEpicCreateOpen","bettween","onClick","overflow","dataSource","itemLayout","renderItem","epic","title","Modal","content","okText","onOk","confirmDeleteEpic","description","dayjs","start","format","end","filter","task","epicId","map","to","key","KanbanScreen","React","path","element","replace","ProjectScreen","memo","Aside","mode","selectedKeys","units","split","length","useRouteType","Main","useRoutes","routes","enabled","Boolean","useAddTask","useDeleteTask","useEditTask","useEditConfig","useReorderTask","useReorderTaskConfig"],"sourceRoot":""}